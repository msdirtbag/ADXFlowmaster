{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "env": {
      "type": "string"
    },
    "adxsgid": {
      "type": "string"
    },
    "vnetspace": {
      "type": "string"
    },
    "mainsnetspace": {
      "type": "string"
    }
  },
  "variables": {
    "environmentid": "[uniqueString(subscription().id, tenant().tenantId, parameters('env'))]",
    "location": "[deployment().location]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('rg-ADXFlowmaster-{0}', parameters('env'))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "env": {
            "value": "[parameters('env')]"
          },
          "location": {
            "value": "[variables('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.26.170.59819",
              "templateHash": "18434568786493412692"
            }
          },
          "parameters": {
            "env": {
              "type": "string"
            },
            "location": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/resourceGroups",
              "apiVersion": "2022-09-01",
              "name": "[format('rg-ADXFlowmaster-{0}', parameters('env'))]",
              "location": "[parameters('location')]"
            }
          ],
          "outputs": {
            "resourcegroupname": {
              "type": "string",
              "value": "[format('rg-ADXFlowmaster-{0}', parameters('env'))]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('umi-ADXFlowmaster-{0}', parameters('env'))]",
      "resourceGroup": "[format('rg-ADXFlowmaster-{0}', parameters('env'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "env": {
            "value": "[variables('environmentid')]"
          },
          "location": {
            "value": "[variables('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.26.170.59819",
              "templateHash": "536585717907025447"
            }
          },
          "parameters": {
            "env": {
              "type": "string"
            },
            "location": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2023-01-31",
              "name": "[format('umi-ADXFlowmaster-{0}', parameters('env'))]",
              "location": "[parameters('location')]"
            }
          ],
          "outputs": {
            "umipid": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('umi-ADXFlowmaster-{0}', parameters('env'))), '2023-01-31').principalId]"
            },
            "umicid": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('umi-ADXFlowmaster-{0}', parameters('env'))), '2023-01-31').clientId]"
            },
            "umirid": {
              "type": "string",
              "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('umi-ADXFlowmaster-{0}', parameters('env')))]"
            },
            "uminame": {
              "type": "string",
              "value": "[format('umi-ADXFlowmaster-{0}', parameters('env'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/deployments', format('rg-ADXFlowmaster-{0}', parameters('env')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('umirole-ADXFlowmaster-{0}', parameters('env'))]",
      "resourceGroup": "[format('rg-ADXFlowmaster-{0}', parameters('env'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-ADXFlowmaster-{0}', parameters('env'))), 'Microsoft.Resources/deployments', format('umi-ADXFlowmaster-{0}', parameters('env'))), '2022-09-01').outputs.umipid.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.26.170.59819",
              "templateHash": "2226720504095562941"
            }
          },
          "parameters": {
            "principalId": {
              "type": "string"
            }
          },
          "variables": {
            "contributorrole": "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c",
            "eventgridrole": "/providers/Microsoft.Authorization/roleDefinitions/1e241071-0855-49ea-94dc-649edcd759de",
            "blobrole": "/providers/Microsoft.Authorization/roleDefinitions/ba92f5b4-2d11-453d-a403-e96b0029c9fe",
            "eventhubrecieverole": "/providers/Microsoft.Authorization/roleDefinitions/a638d3c7-ab3a-418d-83e6-5f17a39d4fde",
            "eventhubsendrole": "/providers/Microsoft.Authorization/roleDefinitions/2b629674-e913-4c01-ae53-ef4638d8f975"
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(parameters('principalId'), variables('contributorrole'), subscription().id)]",
              "properties": {
                "roleDefinitionId": "[variables('contributorrole')]",
                "principalId": "[parameters('principalId')]",
                "principalType": "ServicePrincipal"
              }
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(parameters('principalId'), variables('eventgridrole'), subscription().id)]",
              "properties": {
                "roleDefinitionId": "[variables('eventgridrole')]",
                "principalId": "[parameters('principalId')]",
                "principalType": "ServicePrincipal"
              }
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(parameters('principalId'), variables('blobrole'), subscription().id)]",
              "properties": {
                "roleDefinitionId": "[variables('blobrole')]",
                "principalId": "[parameters('principalId')]",
                "principalType": "ServicePrincipal"
              }
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(parameters('principalId'), variables('eventhubsendrole'), subscription().id)]",
              "properties": {
                "roleDefinitionId": "[variables('eventhubsendrole')]",
                "principalId": "[parameters('principalId')]",
                "principalType": "ServicePrincipal"
              }
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(parameters('principalId'), variables('eventhubrecieverole'), subscription().id)]",
              "properties": {
                "roleDefinitionId": "[variables('eventhubrecieverole')]",
                "principalId": "[parameters('principalId')]",
                "principalType": "ServicePrincipal"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-ADXFlowmaster-{0}', parameters('env'))), 'Microsoft.Resources/deployments', format('umi-ADXFlowmaster-{0}', parameters('env')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('law-ADXFlowmaster-{0}', parameters('env'))]",
      "resourceGroup": "[format('rg-ADXFlowmaster-{0}', parameters('env'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[variables('location')]"
          },
          "umirid": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-ADXFlowmaster-{0}', parameters('env'))), 'Microsoft.Resources/deployments', format('umi-ADXFlowmaster-{0}', parameters('env'))), '2022-09-01').outputs.umirid.value]"
          },
          "environmentid": {
            "value": "[variables('environmentid')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.26.170.59819",
              "templateHash": "16616354465302885911"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "environmentid": {
              "type": "string"
            },
            "umirid": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2022-10-01",
              "name": "[format('log-ADXFlowmaster-{0}', parameters('environmentid'))]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', parameters('umirid'))]": {}
                }
              },
              "properties": {
                "features": {
                  "enableDataExport": true
                },
                "retentionInDays": 90,
                "sku": {
                  "name": "PerGB2018"
                }
              }
            }
          ],
          "outputs": {
            "laworkspacerid": {
              "type": "string",
              "value": "[resourceId('Microsoft.OperationalInsights/workspaces', format('log-ADXFlowmaster-{0}', parameters('environmentid')))]"
            },
            "laworkspacename": {
              "type": "string",
              "value": "[format('log-ADXFlowmaster-{0}', parameters('environmentid'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-ADXFlowmaster-{0}', parameters('env'))), 'Microsoft.Resources/deployments', format('umi-ADXFlowmaster-{0}', parameters('env')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-ADXFlowmaster-{0}', parameters('env'))), 'Microsoft.Resources/deployments', format('umirole-ADXFlowmaster-{0}', parameters('env')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('vnet-ADXFlowmaster-{0}', parameters('env'))]",
      "resourceGroup": "[format('rg-ADXFlowmaster-{0}', parameters('env'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "env": {
            "value": "[variables('environmentid')]"
          },
          "larid": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-ADXFlowmaster-{0}', parameters('env'))), 'Microsoft.Resources/deployments', format('law-ADXFlowmaster-{0}', parameters('env'))), '2022-09-01').outputs.laworkspacerid.value]"
          },
          "location": {
            "value": "[variables('location')]"
          },
          "vnetspace": {
            "value": "[parameters('vnetspace')]"
          },
          "mainsnetspace": {
            "value": "[parameters('mainsnetspace')]"
          },
          "mainnsg": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-ADXFlowmaster-{0}', parameters('env'))), 'Microsoft.Resources/deployments', format('nsg-ADXFlowmaster-{0}', parameters('env'))), '2022-09-01').outputs.mainnsgid.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.26.170.59819",
              "templateHash": "12304469870690515897"
            }
          },
          "parameters": {
            "env": {
              "type": "string"
            },
            "larid": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "vnetspace": {
              "type": "string"
            },
            "mainsnetspace": {
              "type": "string"
            },
            "mainnsg": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2023-09-01",
              "name": "[format('vnet-ADXFlowmaster-{0}', parameters('env'))]",
              "location": "[parameters('location')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "[parameters('vnetspace')]"
                  ]
                },
                "subnets": [
                  {
                    "name": "main",
                    "properties": {
                      "addressPrefix": "[parameters('mainsnetspace')]",
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Disabled",
                      "defaultOutboundAccess": false,
                      "networkSecurityGroup": {
                        "id": "[parameters('mainnsg')]"
                      },
                      "serviceEndpoints": [
                        {
                          "service": "Microsoft.AzureActiveDirectory"
                        }
                      ]
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.Network/virtualNetworks/{0}', format('vnet-ADXFlowmaster-{0}', parameters('env')))]",
              "name": "Monitor",
              "properties": {
                "metrics": [
                  {
                    "category": "allMetrics",
                    "enabled": true
                  }
                ],
                "workspaceId": "[parameters('larid')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', format('vnet-ADXFlowmaster-{0}', parameters('env')))]"
              ]
            }
          ],
          "outputs": {
            "virtualnetworkid": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks', format('vnet-ADXFlowmaster-{0}', parameters('env')))]"
            },
            "virtualnetworkname": {
              "type": "string",
              "value": "[format('vnet-ADXFlowmaster-{0}', parameters('env'))]"
            },
            "mainsubnetresourceid": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', format('vnet-ADXFlowmaster-{0}', parameters('env')), 'main')]"
            },
            "mainsubnetid": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', format('vnet-ADXFlowmaster-{0}', parameters('env'))), '2023-09-01').subnets[0].id]"
            },
            "mainsubnetname": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', format('vnet-ADXFlowmaster-{0}', parameters('env'))), '2023-09-01').subnets[0].name]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-ADXFlowmaster-{0}', parameters('env'))), 'Microsoft.Resources/deployments', format('law-ADXFlowmaster-{0}', parameters('env')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-ADXFlowmaster-{0}', parameters('env'))), 'Microsoft.Resources/deployments', format('nsg-ADXFlowmaster-{0}', parameters('env')))]",
        "[subscriptionResourceId('Microsoft.Resources/deployments', format('rg-ADXFlowmaster-{0}', parameters('env')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('nsg-ADXFlowmaster-{0}', parameters('env'))]",
      "resourceGroup": "[format('rg-ADXFlowmaster-{0}', parameters('env'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "env": {
            "value": "[variables('environmentid')]"
          },
          "location": {
            "value": "[variables('location')]"
          },
          "larid": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-ADXFlowmaster-{0}', parameters('env'))), 'Microsoft.Resources/deployments', format('law-ADXFlowmaster-{0}', parameters('env'))), '2022-09-01').outputs.laworkspacerid.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.26.170.59819",
              "templateHash": "17008417519433648842"
            }
          },
          "parameters": {
            "env": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "larid": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2023-04-01",
              "name": "[format('nsg-ADXFlowmaster-{0}', parameters('env'))]",
              "location": "[parameters('location')]",
              "properties": {
                "securityRules": [
                  {
                    "name": "Allow_VNET_Inbound",
                    "properties": {
                      "protocol": "*",
                      "sourcePortRange": "*",
                      "destinationPortRange": "*",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "VirtualNetwork",
                      "access": "Allow",
                      "priority": 800,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "Deny_All_Internet_Inbound",
                    "properties": {
                      "protocol": "*",
                      "sourcePortRange": "*",
                      "destinationPortRange": "*",
                      "sourceAddressPrefix": "Internet",
                      "destinationAddressPrefix": "VirtualNetwork",
                      "access": "Deny",
                      "priority": 999,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "Allow_VNET_Outbound",
                    "properties": {
                      "protocol": "*",
                      "sourcePortRange": "*",
                      "destinationPortRange": "*",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "VirtualNetwork",
                      "access": "Allow",
                      "priority": 800,
                      "direction": "Outbound"
                    }
                  },
                  {
                    "name": "Allow_AzureCloud_Outbound",
                    "properties": {
                      "protocol": "*",
                      "sourcePortRange": "*",
                      "destinationPortRange": "*",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "AzureCloud",
                      "access": "Allow",
                      "priority": 900,
                      "direction": "Outbound"
                    }
                  },
                  {
                    "name": "Deny_All_Internet_Outbound",
                    "properties": {
                      "protocol": "*",
                      "sourcePortRange": "*",
                      "destinationPortRange": "*",
                      "sourceAddressPrefix": "VirtualNetwork",
                      "destinationAddressPrefix": "Internet",
                      "access": "Deny",
                      "priority": 999,
                      "direction": "Outbound"
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.Network/networkSecurityGroups/{0}', format('nsg-ADXFlowmaster-{0}', parameters('env')))]",
              "name": "Monitor-mainnsg",
              "properties": {
                "logs": [
                  {
                    "categoryGroup": "allLogs",
                    "enabled": true
                  }
                ],
                "workspaceId": "[parameters('larid')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('nsg-ADXFlowmaster-{0}', parameters('env')))]"
              ]
            }
          ],
          "outputs": {
            "mainnsgid": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/networkSecurityGroups', format('nsg-ADXFlowmaster-{0}', parameters('env')))]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-ADXFlowmaster-{0}', parameters('env'))), 'Microsoft.Resources/deployments', format('law-ADXFlowmaster-{0}', parameters('env')))]",
        "[subscriptionResourceId('Microsoft.Resources/deployments', format('rg-ADXFlowmaster-{0}', parameters('env')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('adx-ADXFlowmaster-{0}', parameters('env'))]",
      "resourceGroup": "[format('rg-ADXFlowmaster-{0}', parameters('env'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "environmentid": {
            "value": "[variables('environmentid')]"
          },
          "larid": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-ADXFlowmaster-{0}', parameters('env'))), 'Microsoft.Resources/deployments', format('law-ADXFlowmaster-{0}', parameters('env'))), '2022-09-01').outputs.laworkspacerid.value]"
          },
          "location": {
            "value": "[variables('location')]"
          },
          "snetmainid": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-ADXFlowmaster-{0}', parameters('env'))), 'Microsoft.Resources/deployments', format('vnet-ADXFlowmaster-{0}', parameters('env'))), '2022-09-01').outputs.mainsubnetresourceid.value]"
          },
          "umirid": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-ADXFlowmaster-{0}', parameters('env'))), 'Microsoft.Resources/deployments', format('umi-ADXFlowmaster-{0}', parameters('env'))), '2022-09-01').outputs.umirid.value]"
          },
          "vnetid": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-ADXFlowmaster-{0}', parameters('env'))), 'Microsoft.Resources/deployments', format('vnet-ADXFlowmaster-{0}', parameters('env'))), '2022-09-01').outputs.virtualnetworkid.value]"
          },
          "umipid": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-ADXFlowmaster-{0}', parameters('env'))), 'Microsoft.Resources/deployments', format('umi-ADXFlowmaster-{0}', parameters('env'))), '2022-09-01').outputs.umipid.value]"
          },
          "adxsgid": {
            "value": "[parameters('adxsgid')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.26.170.59819",
              "templateHash": "18253294994261021654"
            }
          },
          "parameters": {
            "umirid": {
              "type": "string"
            },
            "umipid": {
              "type": "string"
            },
            "larid": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "environmentid": {
              "type": "string"
            },
            "snetmainid": {
              "type": "string"
            },
            "vnetid": {
              "type": "string"
            },
            "adxsgid": {
              "type": "string"
            }
          },
          "variables": {
            "$fxv#0": "// 1. Create table command\r\n////////////////////////////////////////////////////////////\r\n.create table FlowLogFlowEventraw (data : dynamic)\r\n\r\n// 2. Create mapping command\r\n////////////////////////////////////////////////////////////\r\n.create table FlowLogFlowEventraw ingestion json mapping 'FlowLogFlowEventraw_mapping' '[{\"column\":\"data\", \"Properties\":{\"path\":\"$\"}}]'\r\n\r\n// 3. Create table command\r\n////////////////////////////////////////////////////////////\r\n.create table FlowLogFlowEvent (TimeGenerated: datetime, SourceIP: string, DestinationIP: string, SourcePort: int, DestinationPort: int, Protocol: int, TrafficDirection: string, TrafficAction: string, TrafficResult: string, PacketsSent: int, BytesSent: int, PacketsReceived: int, BytesReceived: int)\r\n\r\n// 4. Create table retention command\r\n////////////////////////////////////////////////////////////\r\n.alter table FlowLogFlowEventraw policy retention\r\n```\r\n{\r\n    \"SoftDeletePeriod\": \"1.00:00:00\",\r\n    \"Recoverability\": \"Disabled\"\r\n}\r\n```\r\n\r\n// 5. Create function command\r\n////////////////////////////////////////////////////////////\r\n.create-or-alter function \r\nwith (docstring = 'Transforms raw flow log data into FlowLogFlowEvent format', folder='FlowLogs')\r\nFlowLogTransform()  {\r\n    FlowLogFlowEventraw\r\n    | extend recordsArray = todynamic(data.records)\r\n    | mv-expand record = recordsArray\r\n    | mv-expand flowRecord = record.flowRecords.flows\r\n    | mv-expand flowGroup = flowRecord.flowGroups\r\n    | mv-expand flowTuple = flowGroup.flowTuples\r\n    | extend tupleParts = split(flowTuple, \",\")\r\n    | extend TimeGenerated = datetime_add('millisecond', tolong(tupleParts[0]), datetime(1970-01-01)),\r\n          SourceIP = tostring(tupleParts[1]),\r\n          DestinationIP = tostring(tupleParts[2]),\r\n          SourcePort = toint(tupleParts[3]),\r\n          DestinationPort = toint(tupleParts[4]),\r\n          Protocol = toint(tupleParts[5]),\r\n          TrafficDirection = tostring(tupleParts[6]),\r\n          TrafficAction = tostring(tupleParts[7]),\r\n          TrafficResult = tostring(tupleParts[8]),\r\n          PacketsSent = toint(tupleParts[9]),\r\n          BytesSent = toint(tupleParts[10]),\r\n          PacketsReceived = toint(tupleParts[11]),\r\n          BytesReceived = toint(tupleParts[12])\r\n    | project TimeGenerated, SourceIP, DestinationIP, SourcePort, DestinationPort, Protocol, TrafficDirection, TrafficAction, TrafficResult, PacketsSent, BytesSent, PacketsReceived, BytesReceived\r\n}\r\n\r\n// 6. Create policy update command\r\n////////////////////////////////////////////////////////////\r\n.alter table FlowLogFlowEvent policy update \r\n@'[{\"IsEnabled\": true, \"Source\": \"FlowLogFlowEventraw\", \"Query\": \"FlowLogTransform()\", \"IsTransactional\": false, \"PropagateIngestionProperties\": false}]'\r\n\r\n// 7. Create table command\r\n////////////////////////////////////////////////////////////\r\n.create table ['DeviceNetworkEvents']  (ActionType:string, AdditionalFields:string, DeviceId:string, DeviceName:string, InitiatingProcessAccountDomain:string, InitiatingProcessAccountName:string, InitiatingProcessAccountObjectId:string, InitiatingProcessAccountSid:string, InitiatingProcessAccountUpn:string, InitiatingProcessCommandLine:string, InitiatingProcessFileName:string, InitiatingProcessFolderPath:string, InitiatingProcessId:int, InitiatingProcessIntegrityLevel:string, InitiatingProcessMD5:string, InitiatingProcessParentFileName:string, InitiatingProcessParentId:int, InitiatingProcessSHA1:string, InitiatingProcessSHA256:string, InitiatingProcessTokenElevation:string, InitiatingProcessFileSize:int, InitiatingProcessVersionInfoCompanyName:string, InitiatingProcessVersionInfoProductName:string, InitiatingProcessVersionInfoProductVersion:string, InitiatingProcessVersionInfoInternalFileName:string, InitiatingProcessVersionInfoOriginalFileName:string, InitiatingProcessVersionInfoFileDescription:string, LocalIP:string, LocalIPType:string, LocalPort:int, MachineGroup:string, Protocol:string, RemoteIP:string, RemoteIPType:string, RemotePort:int, RemoteUrl:string, ReportId:string, Timestamp:datetime, InitiatingProcessParentCreationTime:datetime, InitiatingProcessCreationTime:datetime)\r\n\r\n// 8. Create mapping command\r\n////////////////////////////////////////////////////////////\r\n.create table ['DeviceNetworkEvents'] ingestion json mapping 'DeviceNetworkEvents_mapping' '[{\"column\":\"InitiatingProcessAccountObjectId\", \"Properties\":{\"Path\":\"$[\\'properties\\'][\\'InitiatingProcessAccountObjectId\\']\"}},{\"column\":\"LocalPort\", \"Properties\":{\"Path\":\"$[\\'properties\\'][\\'LocalPort\\']\"}},{\"column\":\"InitiatingProcessMD5\", \"Properties\":{\"Path\":\"$[\\'properties\\'][\\'InitiatingProcessMD5\\']\"}},{\"column\":\"InitiatingProcessAccountUpn\", \"Properties\":{\"Path\":\"$[\\'properties\\'][\\'InitiatingProcessAccountUpn\\']\"}},{\"column\":\"AdditionalFields\", \"Properties\":{\"Path\":\"$[\\'properties\\'][\\'AdditionalFields\\']\"}},{\"column\":\"InitiatingProcessId\", \"Properties\":{\"Path\":\"$[\\'properties\\'][\\'InitiatingProcessId\\']\"}},{\"column\":\"InitiatingProcessVersionInfoOriginalFileName\", \"Properties\":{\"Path\":\"$[\\'properties\\'][\\'InitiatingProcessVersionInfoOriginalFileName\\']\"}},{\"column\":\"LocalIP\", \"Properties\":{\"Path\":\"$[\\'properties\\'][\\'LocalIP\\']\"}},{\"column\":\"RemotePort\", \"Properties\":{\"Path\":\"$[\\'properties\\'][\\'RemotePort\\']\"}},{\"column\":\"InitiatingProcessAccountName\", \"Properties\":{\"Path\":\"$[\\'properties\\'][\\'InitiatingProcessAccountName\\']\"}},{\"column\":\"InitiatingProcessFolderPath\", \"Properties\":{\"Path\":\"$[\\'properties\\'][\\'InitiatingProcessFolderPath\\']\"}},{\"column\":\"RemoteUrl\", \"Properties\":{\"Path\":\"$[\\'properties\\'][\\'RemoteUrl\\']\"}},{\"column\":\"InitiatingProcessAccountSid\", \"Properties\":{\"Path\":\"$[\\'properties\\'][\\'InitiatingProcessAccountSid\\']\"}},{\"column\":\"RemoteIP\", \"Properties\":{\"Path\":\"$[\\'properties\\'][\\'RemoteIP\\']\"}},{\"column\":\"RemoteIPType\", \"Properties\":{\"Path\":\"$[\\'properties\\'][\\'RemoteIPType\\']\"}},{\"column\":\"InitiatingProcessFileName\", \"Properties\":{\"Path\":\"$[\\'properties\\'][\\'InitiatingProcessFileName\\']\"}},{\"column\":\"InitiatingProcessVersionInfoInternalFileName\", \"Properties\":{\"Path\":\"$[\\'properties\\'][\\'InitiatingProcessVersionInfoInternalFileName\\']\"}},{\"column\":\"ActionType\", \"Properties\":{\"Path\":\"$[\\'properties\\'][\\'ActionType\\']\"}},{\"column\":\"MachineGroup\", \"Properties\":{\"Path\":\"$[\\'properties\\'][\\'MachineGroup\\']\"}},{\"column\":\"DeviceName\", \"Properties\":{\"Path\":\"$[\\'properties\\'][\\'DeviceName\\']\"}},{\"column\":\"InitiatingProcessFileSize\", \"Properties\":{\"Path\":\"$[\\'properties\\'][\\'InitiatingProcessFileSize\\']\"}},{\"column\":\"Timestamp\", \"Properties\":{\"Path\":\"$[\\'properties\\'][\\'Timestamp\\']\"}},{\"column\":\"ReportId\", \"Properties\":{\"Path\":\"$[\\'properties\\'][\\'ReportId\\']\"}},{\"column\":\"InitiatingProcessIntegrityLevel\", \"Properties\":{\"Path\":\"$[\\'properties\\'][\\'InitiatingProcessIntegrityLevel\\']\"}},{\"column\":\"InitiatingProcessAccountDomain\", \"Properties\":{\"Path\":\"$[\\'properties\\'][\\'InitiatingProcessAccountDomain\\']\"}},{\"column\":\"InitiatingProcessCreationTime\", \"Properties\":{\"Path\":\"$[\\'properties\\'][\\'InitiatingProcessCreationTime\\']\"}},{\"column\":\"DeviceId\", \"Properties\":{\"Path\":\"$[\\'properties\\'][\\'DeviceId\\']\"}},{\"column\":\"InitiatingProcessParentId\", \"Properties\":{\"Path\":\"$[\\'properties\\'][\\'InitiatingProcessParentId\\']\"}},{\"column\":\"InitiatingProcessVersionInfoProductVersion\", \"Properties\":{\"Path\":\"$[\\'properties\\'][\\'InitiatingProcessVersionInfoProductVersion\\']\"}},{\"column\":\"InitiatingProcessVersionInfoCompanyName\", \"Properties\":{\"Path\":\"$[\\'properties\\'][\\'InitiatingProcessVersionInfoCompanyName\\']\"}},{\"column\":\"InitiatingProcessVersionInfoProductName\", \"Properties\":{\"Path\":\"$[\\'properties\\'][\\'InitiatingProcessVersionInfoProductName\\']\"}},{\"column\":\"InitiatingProcessCommandLine\", \"Properties\":{\"Path\":\"$[\\'properties\\'][\\'InitiatingProcessCommandLine\\']\"}},{\"column\":\"InitiatingProcessParentCreationTime\", \"Properties\":{\"Path\":\"$[\\'properties\\'][\\'InitiatingProcessParentCreationTime\\']\"}},{\"column\":\"LocalIPType\", \"Properties\":{\"Path\":\"$[\\'properties\\'][\\'LocalIPType\\']\"}},{\"column\":\"InitiatingProcessVersionInfoFileDescription\", \"Properties\":{\"Path\":\"$[\\'properties\\'][\\'InitiatingProcessVersionInfoFileDescription\\']\"}},{\"column\":\"InitiatingProcessTokenElevation\", \"Properties\":{\"Path\":\"$[\\'properties\\'][\\'InitiatingProcessTokenElevation\\']\"}},{\"column\":\"InitiatingProcessSHA256\", \"Properties\":{\"Path\":\"$[\\'properties\\'][\\'InitiatingProcessSHA256\\']\"}},{\"column\":\"Protocol\", \"Properties\":{\"Path\":\"$[\\'properties\\'][\\'Protocol\\']\"}},{\"column\":\"InitiatingProcessParentFileName\", \"Properties\":{\"Path\":\"$[\\'properties\\'][\\'InitiatingProcessParentFileName\\']\"}},{\"column\":\"InitiatingProcessSHA1\", \"Properties\":{\"Path\":\"$[\\'properties\\'][\\'InitiatingProcessSHA1\\']\"}}]'\r\n\r\n// 9. Create table command\r\n////////////////////////////////////////////////////////////\r\n.create table ['ThreatIntelligenceIndicator']  (['Action']:string, ['Active']:bool, ['AzureTenantId']:guid, ['ConfidenceScore']:int, ['Description']:string, ['ExpirationDateTime']:datetime, ['ExternalIndicatorId']:string, ['IndicatorId']:string, ['NetworkSourceIP']:string, ['SourceSystem']:string, ['Tags']:dynamic, ['TenantId']:guid, ['ThreatType']:string, ['TimeGenerated']:datetime, ['TrafficLightProtocolLevel']:string, ['Type']:string, ['_ItemId']:guid, ['_Internal_WorkspaceResourceId']:string)\r\n\r\n// 10. Create mapping command\r\n////////////////////////////////////////////////////////////\r\n.create table ['ThreatIntelligenceIndicator'] ingestion json mapping 'ThreatIntelligenceIndicator_mapping' '[{\"column\":\"Action\", \"Properties\":{\"Path\":\"$[\\'Action\\']\"}},{\"column\":\"Active\", \"Properties\":{\"Path\":\"$[\\'Active\\']\"}},{\"column\":\"AzureTenantId\", \"Properties\":{\"Path\":\"$[\\'AzureTenantId\\']\"}},{\"column\":\"ConfidenceScore\", \"Properties\":{\"Path\":\"$[\\'ConfidenceScore\\']\"}},{\"column\":\"Description\", \"Properties\":{\"Path\":\"$[\\'Description\\']\"}},{\"column\":\"ExpirationDateTime\", \"Properties\":{\"Path\":\"$[\\'ExpirationDateTime\\']\"}},{\"column\":\"ExternalIndicatorId\", \"Properties\":{\"Path\":\"$[\\'ExternalIndicatorId\\']\"}},{\"column\":\"IndicatorId\", \"Properties\":{\"Path\":\"$[\\'IndicatorId\\']\"}},{\"column\":\"NetworkSourceIP\", \"Properties\":{\"Path\":\"$[\\'NetworkSourceIP\\']\"}},{\"column\":\"SourceSystem\", \"Properties\":{\"Path\":\"$[\\'SourceSystem\\']\"}},{\"column\":\"Tags\", \"Properties\":{\"Path\":\"$[\\'Tags\\']\"}},{\"column\":\"TenantId\", \"Properties\":{\"Path\":\"$[\\'TenantId\\']\"}},{\"column\":\"ThreatType\", \"Properties\":{\"Path\":\"$[\\'ThreatType\\']\"}},{\"column\":\"TimeGenerated\", \"Properties\":{\"Path\":\"$[\\'TimeGenerated\\']\"}},{\"column\":\"TrafficLightProtocolLevel\", \"Properties\":{\"Path\":\"$[\\'TrafficLightProtocolLevel\\']\"}},{\"column\":\"Type\", \"Properties\":{\"Path\":\"$[\\'Type\\']\"}},{\"column\":\"_ItemId\", \"Properties\":{\"Path\":\"$[\\'_ItemId\\']\"}},{\"column\":\"_Internal_WorkspaceResourceId\", \"Properties\":{\"Path\":\"$[\\'_Internal_WorkspaceResourceId\\']\"}}]'\r\n\r\n// 11. Create function command\r\n////////////////////////////////////////////////////////////\r\n.create-or-alter function \r\nwith (docstring = 'Transforms raw flow log data into FlowLogFlowEvent format', folder='FlowLogs')\r\nADXFlowmasterleads()  {\r\n    let ThreatIPs = ThreatIntelligenceIndicator\r\n| project NetworkSourceIP;\r\nFlowLogFlowEvent\r\n| extend IPMatch = pack_array(SourceIP, DestinationIP)\r\n| mv-expand IPMatch to typeof(string)\r\n| join kind=inner ThreatIPs on $left.IPMatch == $right.NetworkSourceIP\r\n| union (\r\n    DeviceNetworkEvents\r\n    | extend IPMatch = pack_array(RemoteIP)\r\n    | mv-expand IPMatch to typeof(string)\r\n    | join kind=inner ThreatIPs on $left.IPMatch == $right.NetworkSourceIP\r\n)\r\n}\r\n"
          },
          "resources": [
            {
              "type": "Microsoft.Kusto/clusters",
              "apiVersion": "2023-08-15",
              "name": "[format('adxfm{0}', parameters('environmentid'))]",
              "location": "[parameters('location')]",
              "sku": {
                "capacity": 2,
                "name": "Standard_E4ads_v5",
                "tier": "Standard"
              },
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', parameters('umirid'))]": {}
                }
              },
              "properties": {
                "enableAutoStop": true,
                "enableDiskEncryption": true,
                "enablePurge": false,
                "enableStreamingIngest": true,
                "engineType": "V3",
                "publicIPType": "IPv4",
                "publicNetworkAccess": "Enabled",
                "restrictOutboundNetworkAccess": "Disabled"
              }
            },
            {
              "type": "Microsoft.Kusto/clusters/principalAssignments",
              "apiVersion": "2023-08-15",
              "name": "[format('{0}/{1}', format('adxfm{0}', parameters('environmentid')), format('umiradx{0}', parameters('environmentid')))]",
              "properties": {
                "principalId": "[parameters('umipid')]",
                "principalType": "App",
                "role": "AllDatabasesAdmin",
                "tenantId": "[tenant().tenantId]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Kusto/clusters', format('adxfm{0}', parameters('environmentid')))]"
              ]
            },
            {
              "type": "Microsoft.Kusto/clusters/principalAssignments",
              "apiVersion": "2023-08-15",
              "name": "[format('{0}/{1}', format('adxfm{0}', parameters('environmentid')), format('sgadx{0}', parameters('environmentid')))]",
              "properties": {
                "principalId": "[parameters('adxsgid')]",
                "principalType": "Group",
                "role": "AllDatabasesAdmin",
                "tenantId": "[tenant().tenantId]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Kusto/clusters', format('adxfm{0}', parameters('environmentid')))]"
              ]
            },
            {
              "type": "Microsoft.Kusto/clusters/databases",
              "apiVersion": "2023-08-15",
              "name": "[format('{0}/{1}', format('adxfm{0}', parameters('environmentid')), 'ADXFlowmaster')]",
              "location": "[parameters('location')]",
              "kind": "ReadWrite",
              "properties": {
                "hotCachePeriod": "P60D",
                "softDeletePeriod": "P120D"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Kusto/clusters', format('adxfm{0}', parameters('environmentid')))]"
              ]
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.Kusto/clusters/{0}', format('adxfm{0}', parameters('environmentid')))]",
              "name": "Monitor-adx",
              "properties": {
                "logs": [
                  {
                    "categoryGroup": "allLogs",
                    "enabled": true
                  }
                ],
                "metrics": [
                  {
                    "category": "allMetrics",
                    "enabled": true
                  }
                ],
                "workspaceId": "[parameters('larid')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Kusto/clusters', format('adxfm{0}', parameters('environmentid')))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2023-04-01",
              "name": "[format('pe-adx-{0}', parameters('environmentid'))]",
              "location": "[parameters('location')]",
              "properties": {
                "subnet": {
                  "id": "[parameters('snetmainid')]"
                },
                "privateLinkServiceConnections": [
                  {
                    "name": "[format('psc-adx-{0}', parameters('environmentid'))]",
                    "properties": {
                      "privateLinkServiceId": "[resourceId('Microsoft.Kusto/clusters', format('adxfm{0}', parameters('environmentid')))]",
                      "groupIds": [
                        "cluster"
                      ]
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Kusto/clusters', format('adxfm{0}', parameters('environmentid')))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateDnsZones",
              "apiVersion": "2020-06-01",
              "name": "[format('privatelink.{0}.kusto.windows.net', parameters('location'))]",
              "location": "global",
              "dependsOn": [
                "[resourceId('Microsoft.Kusto/clusters', format('adxfm{0}', parameters('environmentid')))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/{1}', format('privatelink.{0}.kusto.windows.net', parameters('location')), format('adx-{0}', parameters('environmentid')))]",
              "location": "global",
              "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                  "id": "[parameters('vnetid')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', format('privatelink.{0}.kusto.windows.net', parameters('location')))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2023-04-01",
              "name": "[format('{0}/{1}', format('pe-adx-{0}', parameters('environmentid')), format('adxfm{0}', parameters('environmentid')))]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "[format('adxfm{0}', parameters('environmentid'))]",
                    "properties": {
                      "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', format('privatelink.{0}.kusto.windows.net', parameters('location')))]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', format('privatelink.{0}.kusto.windows.net', parameters('location')))]",
                "[resourceId('Microsoft.Kusto/clusters', format('adxfm{0}', parameters('environmentid')))]",
                "[resourceId('Microsoft.Network/privateEndpoints', format('pe-adx-{0}', parameters('environmentid')))]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2023-01-01",
              "name": "[format('stadx{0}', parameters('environmentid'))]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', parameters('umirid'))]": {}
                }
              },
              "kind": "StorageV2",
              "sku": {
                "name": "Standard_LRS"
              },
              "properties": {
                "encryption": {
                  "keySource": "Microsoft.Storage",
                  "requireInfrastructureEncryption": true,
                  "services": {
                    "blob": {
                      "enabled": true
                    },
                    "file": {
                      "enabled": true
                    },
                    "queue": {
                      "enabled": true,
                      "keyType": "Service"
                    },
                    "table": {
                      "enabled": true,
                      "keyType": "Service"
                    }
                  }
                },
                "networkAcls": {
                  "bypass": "AzureServices",
                  "defaultAction": "Allow"
                },
                "allowBlobPublicAccess": false,
                "supportsHttpsTrafficOnly": true,
                "publicNetworkAccess": "Enabled",
                "minimumTlsVersion": "TLS1_2"
              }
            },
            {
              "type": "Microsoft.Storage/storageAccounts/managementPolicies",
              "apiVersion": "2023-01-01",
              "name": "[format('{0}/{1}', format('stadx{0}', parameters('environmentid')), 'default')]",
              "properties": {
                "policy": {
                  "rules": [
                    {
                      "enabled": true,
                      "name": "Archive",
                      "type": "Lifecycle",
                      "definition": {
                        "actions": {
                          "baseBlob": {
                            "tierToCool": {
                              "daysAfterModificationGreaterThan": 10
                            }
                          }
                        },
                        "filters": {
                          "blobTypes": [
                            "blockBlob"
                          ]
                        }
                      }
                    },
                    {
                      "enabled": true,
                      "name": "DeleteAfter24Months",
                      "type": "Lifecycle",
                      "definition": {
                        "actions": {
                          "baseBlob": {
                            "delete": {
                              "daysAfterModificationGreaterThan": 365
                            }
                          }
                        },
                        "filters": {
                          "blobTypes": [
                            "blockBlob"
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', format('stadx{0}', parameters('environmentid')))]"
              ]
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.Storage/storageAccounts/{0}', format('stadx{0}', parameters('environmentid')))]",
              "name": "Monitor-storage01",
              "properties": {
                "metrics": [
                  {
                    "category": "Transaction",
                    "enabled": true
                  }
                ],
                "workspaceId": "[parameters('larid')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', format('stadx{0}', parameters('environmentid')))]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}/{1}', format('stadx{0}', parameters('environmentid')), 'default')]",
              "properties": {},
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', format('stadx{0}', parameters('environmentid')))]"
              ]
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.Storage/storageAccounts/{0}/blobServices/{1}', format('stadx{0}', parameters('environmentid')), 'default')]",
              "name": "Monitor-ADXblob",
              "properties": {
                "metrics": [
                  {
                    "category": "Transaction",
                    "enabled": true
                  }
                ],
                "workspaceId": "[parameters('larid')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', format('stadx{0}', parameters('environmentid')), 'default')]"
              ]
            },
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2023-04-01",
              "name": "[format('pe-{0}adxstblob', parameters('environmentid'))]",
              "location": "[parameters('location')]",
              "properties": {
                "subnet": {
                  "id": "[parameters('snetmainid')]"
                },
                "privateLinkServiceConnections": [
                  {
                    "name": "[format('psc-{0}adxstblob', parameters('environmentid'))]",
                    "properties": {
                      "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', format('stadx{0}', parameters('environmentid')))]",
                      "groupIds": [
                        "blob"
                      ]
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', format('stadx{0}', parameters('environmentid')))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateDnsZones",
              "apiVersion": "2020-06-01",
              "name": "privatelink.blob.core.windows.net",
              "location": "global"
            },
            {
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2023-04-01",
              "name": "[format('{0}/{1}', format('pe-{0}adxstblob', parameters('environmentid')), format('stadx{0}', parameters('environmentid')))]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "[format('stadx{0}', parameters('environmentid'))]",
                    "properties": {
                      "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.blob.core.windows.net')]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', format('pe-{0}adxstblob', parameters('environmentid')))]",
                "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.blob.core.windows.net')]",
                "[resourceId('Microsoft.Storage/storageAccounts', format('stadx{0}', parameters('environmentid')))]"
              ]
            },
            {
              "type": "Microsoft.EventGrid/systemTopics",
              "apiVersion": "2023-12-15-preview",
              "name": "[format('egst-flowmaster-{0}', parameters('environmentid'))]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', parameters('umirid'))]": {}
                }
              },
              "properties": {
                "source": "[resourceId('Microsoft.Storage/storageAccounts', format('stadx{0}', parameters('environmentid')))]",
                "topicType": "Microsoft.Storage.StorageAccounts"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', format('stadx{0}', parameters('environmentid')))]"
              ]
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.EventGrid/systemTopics/{0}', format('egst-flowmaster-{0}', parameters('environmentid')))]",
              "name": "Monitor-eventgrid-adx",
              "properties": {
                "logs": [
                  {
                    "categoryGroup": "allLogs",
                    "enabled": true
                  }
                ],
                "metrics": [
                  {
                    "category": "allMetrics",
                    "enabled": true
                  }
                ],
                "workspaceId": "[parameters('larid')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.EventGrid/systemTopics', format('egst-flowmaster-{0}', parameters('environmentid')))]"
              ]
            },
            {
              "type": "Microsoft.Kusto/clusters/databases/scripts",
              "apiVersion": "2023-08-15",
              "name": "[format('{0}/{1}/{2}', format('adxfm{0}', parameters('environmentid')), 'ADXFlowmaster', format('tablesscript-flowmaster-{0}', parameters('environmentid')))]",
              "properties": {
                "continueOnErrors": false,
                "scriptContent": "[variables('$fxv#0')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', format('privatelink.{0}.kusto.windows.net', parameters('location')))]",
                "[resourceId('Microsoft.Kusto/clusters/databases', format('adxfm{0}', parameters('environmentid')), 'ADXFlowmaster')]"
              ]
            },
            {
              "type": "Microsoft.EventHub/namespaces",
              "apiVersion": "2023-01-01-preview",
              "name": "[format('evhns-flowmaster-{0}', parameters('environmentid'))]",
              "location": "[parameters('location')]",
              "sku": {
                "capacity": 1,
                "name": "Standard",
                "tier": "Standard"
              },
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', parameters('umirid'))]": {}
                }
              },
              "properties": {
                "disableLocalAuth": true,
                "isAutoInflateEnabled": false,
                "kafkaEnabled": true,
                "minimumTlsVersion": "1.2",
                "publicNetworkAccess": "Enabled"
              }
            },
            {
              "type": "Microsoft.EventHub/namespaces/eventhubs",
              "apiVersion": "2023-01-01-preview",
              "name": "[format('{0}/{1}', format('evhns-flowmaster-{0}', parameters('environmentid')), format('evh-flowmaster-flowlogs-{0}', parameters('environmentid')))]",
              "properties": {
                "messageRetentionInDays": 1,
                "partitionCount": 8
              },
              "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', format('evhns-flowmaster-{0}', parameters('environmentid')))]"
              ]
            },
            {
              "type": "Microsoft.EventHub/namespaces/eventhubs",
              "apiVersion": "2023-01-01-preview",
              "name": "[format('{0}/{1}', format('evhns-flowmaster-{0}', parameters('environmentid')), format('evh-flowmaster-devicenetwork-{0}', parameters('environmentid')))]",
              "properties": {
                "messageRetentionInDays": 1,
                "partitionCount": 8
              },
              "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', format('evhns-flowmaster-{0}', parameters('environmentid')))]"
              ]
            },
            {
              "type": "Microsoft.EventHub/namespaces/eventhubs",
              "apiVersion": "2023-01-01-preview",
              "name": "[format('{0}/{1}', format('evhns-flowmaster-{0}', parameters('environmentid')), format('evh-flowmaster-cti-{0}', parameters('environmentid')))]",
              "properties": {
                "messageRetentionInDays": 1,
                "partitionCount": 8
              },
              "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', format('evhns-flowmaster-{0}', parameters('environmentid')))]"
              ]
            },
            {
              "type": "Microsoft.EventGrid/systemTopics/eventSubscriptions",
              "apiVersion": "2023-12-15-preview",
              "name": "[format('{0}/{1}', format('egst-flowmaster-{0}', parameters('environmentid')), format('evgs-flowmaster-devicenetwork-{0}', parameters('environmentid')))]",
              "properties": {
                "deliveryWithResourceIdentity": {
                  "destination": {
                    "endpointType": "EventHub",
                    "properties": {
                      "resourceId": "[resourceId('Microsoft.EventHub/namespaces/eventhubs', format('evhns-flowmaster-{0}', parameters('environmentid')), format('evh-flowmaster-devicenetwork-{0}', parameters('environmentid')))]"
                    }
                  },
                  "identity": {
                    "type": "UserAssigned",
                    "userAssignedIdentity": "[parameters('umirid')]"
                  }
                },
                "filter": {
                  "includedEventTypes": [
                    "Microsoft.Storage.BlobCreated"
                  ],
                  "subjectBeginsWith": "/blobServices/default/containers/insights-logs-advancedhunting-devicenetworkevents/"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.EventGrid/systemTopics', format('egst-flowmaster-{0}', parameters('environmentid')))]",
                "[resourceId('Microsoft.EventHub/namespaces/eventhubs', format('evhns-flowmaster-{0}', parameters('environmentid')), format('evh-flowmaster-devicenetwork-{0}', parameters('environmentid')))]"
              ]
            },
            {
              "type": "Microsoft.EventGrid/systemTopics/eventSubscriptions",
              "apiVersion": "2023-12-15-preview",
              "name": "[format('{0}/{1}', format('egst-flowmaster-{0}', parameters('environmentid')), format('evgs-flowmaster-flowlogs-{0}', parameters('environmentid')))]",
              "properties": {
                "deliveryWithResourceIdentity": {
                  "destination": {
                    "endpointType": "EventHub",
                    "properties": {
                      "resourceId": "[resourceId('Microsoft.EventHub/namespaces/eventhubs', format('evhns-flowmaster-{0}', parameters('environmentid')), format('evh-flowmaster-flowlogs-{0}', parameters('environmentid')))]"
                    }
                  },
                  "identity": {
                    "type": "UserAssigned",
                    "userAssignedIdentity": "[parameters('umirid')]"
                  }
                },
                "eventDeliverySchema": "EventGridSchema",
                "filter": {
                  "includedEventTypes": [
                    "Microsoft.Storage.BlobCreated"
                  ],
                  "enableAdvancedFilteringOnArrays": true,
                  "subjectBeginsWith": "/blobServices/default/containers/insights-logs-flowlogflowevent/"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.EventGrid/systemTopics', format('egst-flowmaster-{0}', parameters('environmentid')))]",
                "[resourceId('Microsoft.EventHub/namespaces/eventhubs', format('evhns-flowmaster-{0}', parameters('environmentid')), format('evh-flowmaster-flowlogs-{0}', parameters('environmentid')))]"
              ]
            },
            {
              "type": "Microsoft.EventGrid/systemTopics/eventSubscriptions",
              "apiVersion": "2023-12-15-preview",
              "name": "[format('{0}/{1}', format('egst-flowmaster-{0}', parameters('environmentid')), format('evgs-flowmaster-cti-{0}', parameters('environmentid')))]",
              "properties": {
                "deliveryWithResourceIdentity": {
                  "destination": {
                    "endpointType": "EventHub",
                    "properties": {
                      "resourceId": "[resourceId('Microsoft.EventHub/namespaces/eventhubs', format('evhns-flowmaster-{0}', parameters('environmentid')), format('evh-flowmaster-cti-{0}', parameters('environmentid')))]"
                    }
                  },
                  "identity": {
                    "type": "UserAssigned",
                    "userAssignedIdentity": "[parameters('umirid')]"
                  }
                },
                "filter": {
                  "includedEventTypes": [
                    "Microsoft.Storage.BlobCreated"
                  ],
                  "subjectBeginsWith": "/blobServices/default/containers/am-threatintelligenceindicator/"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.EventGrid/systemTopics', format('egst-flowmaster-{0}', parameters('environmentid')))]",
                "[resourceId('Microsoft.EventHub/namespaces/eventhubs', format('evhns-flowmaster-{0}', parameters('environmentid')), format('evh-flowmaster-cti-{0}', parameters('environmentid')))]"
              ]
            },
            {
              "type": "Microsoft.Kusto/clusters/databases/dataConnections",
              "apiVersion": "2023-08-15",
              "name": "[format('{0}/{1}/{2}', format('adxfm{0}', parameters('environmentid')), 'ADXFlowmaster', format('adxdc-fw-devicenetwork-{0}', parameters('environmentid')))]",
              "location": "[parameters('location')]",
              "kind": "EventGrid",
              "properties": {
                "consumerGroup": "$Default",
                "dataFormat": "JSON",
                "databaseRouting": "Multi",
                "managedIdentityResourceId": "[parameters('umirid')]",
                "eventGridResourceId": "[resourceId('Microsoft.EventGrid/systemTopics', format('egst-flowmaster-{0}', parameters('environmentid')))]",
                "eventHubResourceId": "[resourceId('Microsoft.EventHub/namespaces/eventhubs', format('evhns-flowmaster-{0}', parameters('environmentid')), format('evh-flowmaster-devicenetwork-{0}', parameters('environmentid')))]",
                "storageAccountResourceId": "[resourceId('Microsoft.Storage/storageAccounts', format('stadx{0}', parameters('environmentid')))]",
                "tableName": "DeviceNetworkEvents",
                "mappingRuleName": "DeviceNetworkEvents_mapping"
              },
              "dependsOn": [
                "[resourceId('Microsoft.EventGrid/systemTopics', format('egst-flowmaster-{0}', parameters('environmentid')))]",
                "[resourceId('Microsoft.EventHub/namespaces/eventhubs', format('evhns-flowmaster-{0}', parameters('environmentid')), format('evh-flowmaster-devicenetwork-{0}', parameters('environmentid')))]",
                "[resourceId('Microsoft.Kusto/clusters/databases', format('adxfm{0}', parameters('environmentid')), 'ADXFlowmaster')]",
                "[resourceId('Microsoft.Kusto/clusters/databases/scripts', format('adxfm{0}', parameters('environmentid')), 'ADXFlowmaster', format('tablesscript-flowmaster-{0}', parameters('environmentid')))]",
                "[resourceId('Microsoft.Storage/storageAccounts', format('stadx{0}', parameters('environmentid')))]"
              ]
            },
            {
              "type": "Microsoft.Kusto/clusters/databases/dataConnections",
              "apiVersion": "2023-08-15",
              "name": "[format('{0}/{1}/{2}', format('adxfm{0}', parameters('environmentid')), 'ADXFlowmaster', format('adxdc-fw-cti-{0}', parameters('environmentid')))]",
              "location": "[parameters('location')]",
              "kind": "EventGrid",
              "properties": {
                "consumerGroup": "$Default",
                "dataFormat": "JSON",
                "databaseRouting": "Multi",
                "managedIdentityResourceId": "[parameters('umirid')]",
                "eventGridResourceId": "[resourceId('Microsoft.EventGrid/systemTopics', format('egst-flowmaster-{0}', parameters('environmentid')))]",
                "eventHubResourceId": "[resourceId('Microsoft.EventHub/namespaces/eventhubs', format('evhns-flowmaster-{0}', parameters('environmentid')), format('evh-flowmaster-cti-{0}', parameters('environmentid')))]",
                "storageAccountResourceId": "[resourceId('Microsoft.Storage/storageAccounts', format('stadx{0}', parameters('environmentid')))]",
                "tableName": "ThreatIntelligenceIndicator",
                "mappingRuleName": "ThreatIntelligenceIndicator_mapping"
              },
              "dependsOn": [
                "[resourceId('Microsoft.EventGrid/systemTopics', format('egst-flowmaster-{0}', parameters('environmentid')))]",
                "[resourceId('Microsoft.EventHub/namespaces/eventhubs', format('evhns-flowmaster-{0}', parameters('environmentid')), format('evh-flowmaster-cti-{0}', parameters('environmentid')))]",
                "[resourceId('Microsoft.Kusto/clusters/databases', format('adxfm{0}', parameters('environmentid')), 'ADXFlowmaster')]",
                "[resourceId('Microsoft.Kusto/clusters/databases/scripts', format('adxfm{0}', parameters('environmentid')), 'ADXFlowmaster', format('tablesscript-flowmaster-{0}', parameters('environmentid')))]",
                "[resourceId('Microsoft.Storage/storageAccounts', format('stadx{0}', parameters('environmentid')))]"
              ]
            },
            {
              "type": "Microsoft.Kusto/clusters/databases/dataConnections",
              "apiVersion": "2023-08-15",
              "name": "[format('{0}/{1}/{2}', format('adxfm{0}', parameters('environmentid')), 'ADXFlowmaster', format('adxdc-fw-flowlogs-{0}', parameters('environmentid')))]",
              "location": "[parameters('location')]",
              "kind": "EventGrid",
              "properties": {
                "blobStorageEventType": "Microsoft.Storage.BlobCreated",
                "consumerGroup": "$Default",
                "dataFormat": "JSON",
                "databaseRouting": "Multi",
                "managedIdentityResourceId": "[parameters('umirid')]",
                "eventGridResourceId": "[resourceId('Microsoft.EventGrid/systemTopics', format('egst-flowmaster-{0}', parameters('environmentid')))]",
                "eventHubResourceId": "[resourceId('Microsoft.EventHub/namespaces/eventhubs', format('evhns-flowmaster-{0}', parameters('environmentid')), format('evh-flowmaster-flowlogs-{0}', parameters('environmentid')))]",
                "mappingRuleName": "FlowLogFlowEventraw_mapping",
                "storageAccountResourceId": "[resourceId('Microsoft.Storage/storageAccounts', format('stadx{0}', parameters('environmentid')))]",
                "tableName": "FlowLogFlowEventraw"
              },
              "dependsOn": [
                "[resourceId('Microsoft.EventGrid/systemTopics', format('egst-flowmaster-{0}', parameters('environmentid')))]",
                "[resourceId('Microsoft.Kusto/clusters/databases', format('adxfm{0}', parameters('environmentid')), 'ADXFlowmaster')]",
                "[resourceId('Microsoft.EventHub/namespaces/eventhubs', format('evhns-flowmaster-{0}', parameters('environmentid')), format('evh-flowmaster-flowlogs-{0}', parameters('environmentid')))]",
                "[resourceId('Microsoft.Kusto/clusters/databases/scripts', format('adxfm{0}', parameters('environmentid')), 'ADXFlowmaster', format('tablesscript-flowmaster-{0}', parameters('environmentid')))]",
                "[resourceId('Microsoft.Storage/storageAccounts', format('stadx{0}', parameters('environmentid')))]"
              ]
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.EventHub/namespaces/{0}', format('evhns-flowmaster-{0}', parameters('environmentid')))]",
              "name": "Monitor-eventhub-adx",
              "properties": {
                "logs": [
                  {
                    "categoryGroup": "allLogs",
                    "enabled": true
                  }
                ],
                "metrics": [
                  {
                    "category": "allMetrics",
                    "enabled": true
                  }
                ],
                "workspaceId": "[parameters('larid')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', format('evhns-flowmaster-{0}', parameters('environmentid')))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2023-04-01",
              "name": "[format('pe-evhnadx-{0}', parameters('environmentid'))]",
              "location": "[parameters('location')]",
              "properties": {
                "subnet": {
                  "id": "[parameters('snetmainid')]"
                },
                "privateLinkServiceConnections": [
                  {
                    "name": "[format('psc-evhnadx-{0}', parameters('environmentid'))]",
                    "properties": {
                      "privateLinkServiceId": "[resourceId('Microsoft.EventHub/namespaces', format('evhns-flowmaster-{0}', parameters('environmentid')))]",
                      "groupIds": [
                        "namespace"
                      ]
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', format('evhns-flowmaster-{0}', parameters('environmentid')))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2023-04-01",
              "name": "[format('{0}/{1}', format('pe-evhnadx-{0}', parameters('environmentid')), format('evhns-flowmaster-{0}', parameters('environmentid')))]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "[format('evhns-flowmaster-{0}', parameters('environmentid'))]",
                    "properties": {
                      "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.servicebus.windows.net')]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.EventHub/namespaces', format('evhns-flowmaster-{0}', parameters('environmentid')))]",
                "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.servicebus.windows.net')]",
                "[resourceId('Microsoft.Network/privateEndpoints', format('pe-evhnadx-{0}', parameters('environmentid')))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateDnsZones",
              "apiVersion": "2020-06-01",
              "name": "privatelink.servicebus.windows.net",
              "location": "global"
            },
            {
              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/{1}', 'privatelink.servicebus.windows.net', format('EventHub-{0}', parameters('environmentid')))]",
              "location": "global",
              "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                  "id": "[parameters('vnetid')]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.servicebus.windows.net')]"
              ]
            }
          ],
          "outputs": {
            "adxname": {
              "type": "string",
              "value": "[format('adxfm{0}', parameters('environmentid'))]"
            },
            "adxstrid": {
              "type": "string",
              "value": "[resourceId('Microsoft.Storage/storageAccounts', format('stadx{0}', parameters('environmentid')))]"
            },
            "adxeventgridname": {
              "type": "string",
              "value": "[format('egst-flowmaster-{0}', parameters('environmentid'))]"
            },
            "adxstcs": {
              "type": "string",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1}', format('stadx{0}', parameters('environmentid')), listKeys(resourceId('Microsoft.Storage/storageAccounts', format('stadx{0}', parameters('environmentid'))), '2023-01-01').keys[0].value)]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-ADXFlowmaster-{0}', parameters('env'))), 'Microsoft.Resources/deployments', format('law-ADXFlowmaster-{0}', parameters('env')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-ADXFlowmaster-{0}', parameters('env'))), 'Microsoft.Resources/deployments', format('umi-ADXFlowmaster-{0}', parameters('env')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-ADXFlowmaster-{0}', parameters('env'))), 'Microsoft.Resources/deployments', format('umirole-ADXFlowmaster-{0}', parameters('env')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-ADXFlowmaster-{0}', parameters('env'))), 'Microsoft.Resources/deployments', format('vnet-ADXFlowmaster-{0}', parameters('env')))]"
      ]
    }
  ]
}